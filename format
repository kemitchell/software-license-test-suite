#!/usr/bin/env node
const inflection = require('inflection')

let families = new Map()

for (let test of require('./tests')) {
  let family = test.family
  if (!families.has(family)) families.set(family, new Set())
  families.get(family).add(test)
}

const BASIC_KEYS = ['name', 'family', 'genus', 'url']

console.log('# Software License Test Suite\n')

Array.from(families.keys())
  .sort()
  .forEach(function (family) {
    console.log(`## ${titleize(family)}\n`)
    Array.from(families.get(family).values())
      .sort(function (a, b) {
        return a.name.localeCompare(b.name)
      })
      .forEach(function (test) {
        console.log(`### ${test.name}\n`)
        console.log(`${titleize(family)} / ${titleize(test.genus)}\n`)
        console.log(`<${test.url}>\n`)
        Object.keys(test)
          .sort()
          .forEach(function (key) {
            if (!BASIC_KEYS.includes(key)) {
              console.log(`${key}: ${test[key]}\n`)
            }
          })
      })
  })

function titleize (string) {
  return inflection.titleize(string)
}
